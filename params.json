{"name":"Frontend-develop","tagline":"Front End Tool using Gulp which includes Brower Sync, Babel, React, BS3, jQuery, etc.","body":"# Frontend-Develop\r\n\r\n- This is a build tool to speed up front-end development.\r\n- Everything is run through the terminal, eg: `gulp watch`.\r\n- I currently run this on Ubuntu for development.\r\n- You do not install the `npm packages` on your live server.\r\n- I am using `node v0.12.0`.\r\n\r\n## What is included?\r\nThese are some of the front-end tools at your disposal.\r\n\r\n- Babel\r\n- Bootstrap 3\r\n- DevIcons\r\n- Font-Awesome\r\n- jQuery 2\r\n- jQuery Lazyload\r\n- React + JSX\r\n- Select2 (And Bootstrap CSS)\r\n- Note: jQuery + Bootstrap are compiled into dependencies.min.js & dependencies.min.css, you can use this if you like or just use the files from the `third-party/` folder.\r\n\r\n## Requirements\r\nYou must have the following packages installed on your system:\r\n\r\n- nodejs\r\n- npm\r\n- bower (optional)\r\n\r\n## Setup & Configuration\r\n\r\nSetup is very easy, it takes one command: `npm install`\r\n\r\nIt may take a few moments to install, but when it is complete you are good to go. Using `babel-preset-es2015` includes babel for all NodeJS versions.\r\n\r\nTo use the default configuration rename: `config-gulp.yml.sample` to `config-gulp.yml`.\r\nYou can also place this a folder below (see why).\r\n\r\n#### Git Submodule In Your Project\r\nIf you'd like to run this up to date in an your project while preserving this as a `git module` you would do the following:\r\n\r\n    cd /your-app/\r\n    git submodule add git@github.com:JREAM/frontend-develop.git develop\r\n    cp develop/config-gulp.yml.sample config-gulp.yml\r\n    cd develop\r\n    gulp\r\n\r\n#### Changing Configuration\r\nThe default directories are as follows:\r\n\r\n- `/src` - Your custom files, your files can be named anything.\r\n    - `/js`\r\n    - `/sass`\r\n    - `/img`\r\n- `dist` - Your rendered, combined and compressed content\r\n    - `/css`\r\n    - `/fonts`\r\n    - `/img`\r\n    - `/js`\r\n    - `/third-party`\r\n\r\nThe **default** distribution, or rendered file names are:\r\n\r\n- `app.min.css`\r\n- `app.min.js`\r\n- `dependencies.min.css`\r\n- `dependencies.min.js`\r\n\r\nThe above files would go in your HTML file, and any other extra items under `/third-party` if you wanted them included.\r\n\r\n#### Change Configuration Output\r\nTo change the names and locations of your output, edit `config-gulp.yml`.\r\nModify whatever you like. However, you should **not** edit the `third_party` parameters.\r\n\r\n#### Live Browser Reload\r\nTo get the live browser reloading running you need to set **two values**.\r\n\r\n**The first** is the location to your projects main entry point in `config-gulp.yml`.\r\nChange this line `browser_proxy: \"localhost/your-project\"` to your path.\r\n\r\n**The second** is the location of your view files in `config-gulp.yml`.\r\nChange this line `template_files: \"../app/views/**/*.volt\"` to your relative view path.\r\n\r\nAll you have to do now is run `gulp watch` and BrowserSync will reload all your SASS/JS/HTML editing on the fly.\r\n\r\n### Third Party\r\n\r\nThird party data comes from `package.json`. This gathers data from the `node_modules` folder.\r\n\r\n### Usage\r\n\r\nFirst create a SASS or JS file (or both) and run gulp, then check your output folder.\r\n\r\n| Command           | Result |\r\n|-------------------|--------|\r\n| `gulp`            | Runs: All Commands except Watch            |\r\n| `gulp img`        | Runs: Image Minifier                       |\r\n| `gulp js`         | Runs: Custom JS                            |\r\n| `gulp sass`       | Runs: Custom SASS                          |\r\n| `gulp third_party`| Runs: Compiles Third Party JS and CSS      |\r\n| `gulp watch`      | Runs: Browser Live Reload of JS, SASS, IMG |\r\n\r\n## Shoutouts\r\n\r\n[Dan Sackett](https://github.com/dansackett) - Got me into Gulp :)\r\n","google":"UA-3106599-2","note":"Don't delete this file! It's used internally to help with page regeneration."}